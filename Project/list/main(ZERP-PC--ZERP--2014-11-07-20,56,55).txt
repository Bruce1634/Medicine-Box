; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\obj\main.o --asm_dir=..\list\ --list_dir=..\list\ --depend=..\obj\main.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\User\inc -I"D:\Program Files\Keil_v5\ARM\RV31\INC" -I"D:\Program Files\Keil_v5\ARM\PACK\ARM\CMSIS\3.20.4\CMSIS\Include" -I"D:\Program Files\Keil_v5\ARM\Inc\ST\STM32F10x" -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\main.crf ..\..\User\src\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  main PROC
;;;11     
;;;12     int main()
000000  2120              MOVS     r1,#0x20
;;;13     {    
;;;14     
;;;15     	
;;;16     		memset(&motor_up,0,sizeof(MOTOR));
000002  4829              LDR      r0,|L1.168|
000004  f7fffffe          BL       __aeabi_memclr4
;;;17     		memset(&motor_down,0,sizeof(MOTOR));
000008  2120              MOVS     r1,#0x20
00000a  4828              LDR      r0,|L1.172|
00000c  f7fffffe          BL       __aeabi_memclr4
;;;18     		memset(&motorPID_up,0,sizeof(PIDPARA));
000010  211c              MOVS     r1,#0x1c
000012  4827              LDR      r0,|L1.176|
000014  f7fffffe          BL       __aeabi_memclr4
;;;19     		memset(&motorPID_down,0,sizeof(PIDPARA));
000018  211c              MOVS     r1,#0x1c
00001a  4826              LDR      r0,|L1.180|
00001c  f7fffffe          BL       __aeabi_memclr4
;;;20     		memset(&position_up,0,sizeof(POSITION));
000020  2118              MOVS     r1,#0x18
000022  4825              LDR      r0,|L1.184|
000024  f7fffffe          BL       __aeabi_memclr4
;;;21     		memset(&position_down,0,sizeof(POSITION));
000028  2118              MOVS     r1,#0x18
00002a  4824              LDR      r0,|L1.188|
00002c  f7fffffe          BL       __aeabi_memclr4
;;;22     		memset(&positionPID_up,0,sizeof(PIDPARA));
000030  211c              MOVS     r1,#0x1c
000032  4823              LDR      r0,|L1.192|
000034  f7fffffe          BL       __aeabi_memclr4
;;;23     		memset(&positionPID_down,0,sizeof(PIDPARA)); 
000038  211c              MOVS     r1,#0x1c
00003a  4822              LDR      r0,|L1.196|
00003c  f7fffffe          BL       __aeabi_memclr4
;;;24     		
;;;25     	
;;;26     		motor_up.VelocityExpect = -20;
000040  f06f0013          MVN      r0,#0x13
000044  4918              LDR      r1,|L1.168|
000046  60c8              STR      r0,[r1,#0xc]  ; motor_up
;;;27     		motor_up.INPWM_Uplimit = 2400;
000048  f44f6016          MOV      r0,#0x960
00004c  6188              STR      r0,[r1,#0x18]  ; motor_up
;;;28     		motor_up.INPWM_Lowlimit = -2400;
00004e  4240              RSBS     r0,r0,#0
000050  61c8              STR      r0,[r1,#0x1c]  ; motor_up
;;;29     		motor_up.SampleTime = 1;
000052  2001              MOVS     r0,#1
000054  6088              STR      r0,[r1,#8]  ; motor_up
;;;30     		motorPID_up.Kp = 0.1;
000056  481c              LDR      r0,|L1.200|
000058  4915              LDR      r1,|L1.176|
00005a  6008              STR      r0,[r1,#0]  ; motorPID_up
;;;31     		motorPID_up.Ki = 0.002;
00005c  481b              LDR      r0,|L1.204|
00005e  6048              STR      r0,[r1,#4]  ; motorPID_up
;;;32     		motorPID_up.Kd = 0;
000060  2000              MOVS     r0,#0
000062  6088              STR      r0,[r1,#8]  ; motorPID_up
;;;33     	
;;;34     	
;;;35     	
;;;36     	  RCC_Configuration();
000064  f7fffffe          BL       RCC_Configuration
;;;37     	  GPIO_Configuration();
000068  f7fffffe          BL       GPIO_Configuration
;;;38     		SysTick_Init();
00006c  f7fffffe          BL       SysTick_Init
;;;39     		USART_Configuration();	
000070  f7fffffe          BL       USART_Configuration
;;;40     		NVIC_Configuration();
000074  f7fffffe          BL       NVIC_Configuration
;;;41     		USART_ITConfig(USART1,USART_IT_RXNE,ENABLE);//开启串口接收中断
000078  2201              MOVS     r2,#1
00007a  f2405125          MOV      r1,#0x525
00007e  4814              LDR      r0,|L1.208|
000080  f7fffffe          BL       USART_ITConfig
;;;42     		USART_Cmd(USART1, ENABLE);
000084  2101              MOVS     r1,#1
000086  4812              LDR      r0,|L1.208|
000088  f7fffffe          BL       USART_Cmd
;;;43     	  SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk;  //开系统定时中断
00008c  f04f20e0          MOV      r0,#0xe000e000
000090  6900              LDR      r0,[r0,#0x10]
000092  f0400001          ORR      r0,r0,#1
000096  f04f21e0          MOV      r1,#0xe000e000
00009a  6108              STR      r0,[r1,#0x10]
;;;44     		Encoder_Configration();
00009c  f7fffffe          BL       Encoder_Configration
;;;45     		TIM8_PWM_Output();
0000a0  f7fffffe          BL       TIM8_PWM_Output
;;;46     							  	
;;;47     
;;;48     
;;;49     	while(1)
0000a4  bf00              NOP      
                  |L1.166|
0000a6  e7fe              B        |L1.166|
;;;50     	{	
;;;51     		
;;;52     			
;;;53     	}	
;;;54     
;;;55        
;;;56     
;;;57     }
;;;58     
                          ENDP

                  |L1.168|
                          DCD      motor_up
                  |L1.172|
                          DCD      motor_down
                  |L1.176|
                          DCD      motorPID_up
                  |L1.180|
                          DCD      motorPID_down
                  |L1.184|
                          DCD      position_up
                  |L1.188|
                          DCD      position_down
                  |L1.192|
                          DCD      positionPID_up
                  |L1.196|
                          DCD      positionPID_down
                  |L1.200|
                          DCD      0x3dcccccd
                  |L1.204|
                          DCD      0x3b03126f
                  |L1.208|
                          DCD      0x40013800

                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  motor_up
                          %        32
                  motor_down
                          %        32
                  motorPID_up
                          %        28
                  motorPID_down
                          %        28
                  position_up
                          %        24
                  position_down
                          %        24
                  positionPID_up
                          %        28
                  positionPID_down
                          %        28

                  __ARM_use_no_argv EQU 0
