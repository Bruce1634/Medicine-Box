; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\obj\main.o --asm_dir=..\list\ --list_dir=..\list\ --depend=..\obj\main.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\User\inc -I"D:\Program Files\Keil_v5\ARM\RV31\INC" -I"D:\Program Files\Keil_v5\ARM\PACK\ARM\CMSIS\3.20.4\CMSIS\Include" -I"D:\Program Files\Keil_v5\ARM\Inc\ST\STM32F10x" -DSTM32F10X_MD -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\main.crf ..\..\User\src\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  main PROC
;;;13     
;;;14     int main()
000000  2120              MOVS     r1,#0x20
;;;15     {    
;;;16     
;;;17     	
;;;18     		memset(&motor_up,0,sizeof(MOTOR));
000002  4834              LDR      r0,|L1.212|
000004  f7fffffe          BL       __aeabi_memclr4
;;;19     		memset(&motor_down,0,sizeof(MOTOR));
000008  2120              MOVS     r1,#0x20
00000a  4833              LDR      r0,|L1.216|
00000c  f7fffffe          BL       __aeabi_memclr4
;;;20     		memset(&motorPID_up,0,sizeof(PIDPARA));
000010  211c              MOVS     r1,#0x1c
000012  4832              LDR      r0,|L1.220|
000014  f7fffffe          BL       __aeabi_memclr4
;;;21     		memset(&motorPID_down,0,sizeof(PIDPARA));
000018  211c              MOVS     r1,#0x1c
00001a  4831              LDR      r0,|L1.224|
00001c  f7fffffe          BL       __aeabi_memclr4
;;;22     		memset(&position_down,0,sizeof(POSITION));
000020  2118              MOVS     r1,#0x18
000022  4830              LDR      r0,|L1.228|
000024  f7fffffe          BL       __aeabi_memclr4
;;;23     		memset(&positionPID_down,0,sizeof(PIDPARA)); 
000028  211c              MOVS     r1,#0x1c
00002a  482f              LDR      r0,|L1.232|
00002c  f7fffffe          BL       __aeabi_memclr4
;;;24     	  n = 0;
000030  2000              MOVS     r0,#0
000032  492e              LDR      r1,|L1.236|
000034  6008              STR      r0,[r1,#0]  ; n
;;;25     		
;;;26     	
;;;27     		motor_up.VelocityExpect = -20;
000036  f06f0013          MVN      r0,#0x13
00003a  4926              LDR      r1,|L1.212|
00003c  60c8              STR      r0,[r1,#0xc]  ; motor_up
;;;28     		motor_up.INPWM_Uplimit = 2400;
00003e  f44f6016          MOV      r0,#0x960
000042  6188              STR      r0,[r1,#0x18]  ; motor_up
;;;29     		motor_up.INPWM_Lowlimit = -2400;
000044  4240              RSBS     r0,r0,#0
000046  61c8              STR      r0,[r1,#0x1c]  ; motor_up
;;;30     		motor_up.SampleTime = 1;
000048  2001              MOVS     r0,#1
00004a  6088              STR      r0,[r1,#8]  ; motor_up
;;;31     		motorPID_up.Kp = 100;
00004c  4828              LDR      r0,|L1.240|
00004e  4923              LDR      r1,|L1.220|
000050  6008              STR      r0,[r1,#0]  ; motorPID_up
;;;32     		motorPID_up.Ki = 0.1;
000052  4828              LDR      r0,|L1.244|
000054  6048              STR      r0,[r1,#4]  ; motorPID_up
;;;33     		motorPID_up.Kd = 0;
000056  2000              MOVS     r0,#0
000058  6088              STR      r0,[r1,#8]  ; motorPID_up
;;;34     	
;;;35     	
;;;36     		motor_down.INPWM_Uplimit = 2400;
00005a  f44f6016          MOV      r0,#0x960
00005e  491e              LDR      r1,|L1.216|
000060  6188              STR      r0,[r1,#0x18]  ; motor_down
;;;37     		motor_down.INPWM_Lowlimit = -2400;
000062  4240              RSBS     r0,r0,#0
000064  61c8              STR      r0,[r1,#0x1c]  ; motor_down
;;;38     		motor_down.SampleTime = 1;
000066  2001              MOVS     r0,#1
000068  6088              STR      r0,[r1,#8]  ; motor_down
;;;39     		motorPID_down.Kp = 100;
00006a  4821              LDR      r0,|L1.240|
00006c  491c              LDR      r1,|L1.224|
00006e  6008              STR      r0,[r1,#0]  ; motorPID_down
;;;40     		motorPID_down.Ki = 0.1;
000070  4820              LDR      r0,|L1.244|
000072  6048              STR      r0,[r1,#4]  ; motorPID_down
;;;41     		motorPID_down.Kd = 0;
000074  2000              MOVS     r0,#0
000076  6088              STR      r0,[r1,#8]  ; motorPID_down
;;;42     		position_down.PositionCurrent = 0;
000078  2100              MOVS     r1,#0
00007a  4a1a              LDR      r2,|L1.228|
00007c  6091              STR      r1,[r2,#8]  ; position_down
00007e  60d1              STR      r1,[r2,#0xc]  ; position_down
;;;43     		positionPID_down.Kp = 0.015;
000080  481d              LDR      r0,|L1.248|
000082  4919              LDR      r1,|L1.232|
000084  6008              STR      r0,[r1,#0]  ; positionPID_down
;;;44     		positionPID_down.Ki = 0.000001;
000086  481d              LDR      r0,|L1.252|
000088  6048              STR      r0,[r1,#4]  ; positionPID_down
;;;45     		positionPID_down.Kd = 0;
00008a  2000              MOVS     r0,#0
00008c  6088              STR      r0,[r1,#8]  ; positionPID_down
;;;46     		
;;;47     	
;;;48     	
;;;49     	
;;;50     	  RCC_Configuration();
00008e  f7fffffe          BL       RCC_Configuration
;;;51     	  GPIO_Configuration();
000092  f7fffffe          BL       GPIO_Configuration
;;;52     		SysTick_Init();
000096  f7fffffe          BL       SysTick_Init
;;;53     		USART_Configuration();	
00009a  f7fffffe          BL       USART_Configuration
;;;54     		NVIC_Configuration();
00009e  f7fffffe          BL       NVIC_Configuration
;;;55     		USART_ITConfig(USART1,USART_IT_RXNE,ENABLE);//开启串口接收中断
0000a2  2201              MOVS     r2,#1
0000a4  f2405125          MOV      r1,#0x525
0000a8  4815              LDR      r0,|L1.256|
0000aa  f7fffffe          BL       USART_ITConfig
;;;56     		USART_Cmd(USART1, ENABLE);
0000ae  2101              MOVS     r1,#1
0000b0  4813              LDR      r0,|L1.256|
0000b2  f7fffffe          BL       USART_Cmd
;;;57     	  SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk;  //开系统定时中断
0000b6  f04f20e0          MOV      r0,#0xe000e000
0000ba  6900              LDR      r0,[r0,#0x10]
0000bc  f0400001          ORR      r0,r0,#1
0000c0  f04f21e0          MOV      r1,#0xe000e000
0000c4  6108              STR      r0,[r1,#0x10]
;;;58     		Encoder_Configration();
0000c6  f7fffffe          BL       Encoder_Configration
;;;59     		TIM8_PWM_Output();
0000ca  f7fffffe          BL       TIM8_PWM_Output
;;;60     							  	
;;;61     
;;;62     
;;;63     	while(1)
0000ce  bf00              NOP      
                  |L1.208|
0000d0  e7fe              B        |L1.208|
;;;64     	{	
;;;65     		
;;;66     			
;;;67     	}	
;;;68     
;;;69        
;;;70     
;;;71     }
;;;72     
                          ENDP

0000d2  0000              DCW      0x0000
                  |L1.212|
                          DCD      motor_up
                  |L1.216|
                          DCD      motor_down
                  |L1.220|
                          DCD      motorPID_up
                  |L1.224|
                          DCD      motorPID_down
                  |L1.228|
                          DCD      position_down
                  |L1.232|
                          DCD      positionPID_down
                  |L1.236|
                          DCD      n
                  |L1.240|
                          DCD      0x42c80000
                  |L1.244|
                          DCD      0x3dcccccd
                  |L1.248|
                          DCD      0x3c75c28f
                  |L1.252|
                          DCD      0x358637bd
                  |L1.256|
                          DCD      0x40013800

                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  motor_up
                          %        32
                  motor_down
                          %        32
                  motorPID_up
                          %        28
                  motorPID_down
                          %        28
                  position_up
                          %        24
                  position_down
                          %        24
                  positionPID_up
                          %        28
                  positionPID_down
                          %        28

                          AREA ||.data||, DATA, ALIGN=2

                  n
                          DCD      0x00000000
                  flag
000004  00                DCB      0x00
                  down_flag
000005  00                DCB      0x00
                  count_Up
000006  00                DCB      0x00
                  count_Down
000007  00                DCB      0x00

                  __ARM_use_no_argv EQU 0
